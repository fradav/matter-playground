{"version":3,"file":"index-zGlfDqU6.js","sources":["../../galton.js","../../main.js"],"sourcesContent":["import Matter from \"matter-js\";\n\nimport statdists from '@stdlib/dist-stats-base-dists-flat';\nconst dists = statdists.base.dists;\n\nconst arrayRange = (start, stop, step) =>\n    Array.from(\n        { length: (stop - start) / step + 1 },\n        (value, index) => start + index * step\n    );\nconst x = arrayRange(-5, 5, 0.01);\nconst sigma = 1;\nconst mu = 0;\n// const cdf = x.map(x => dists['normal'].cdf(x, mu, sigma));\n\nexport const Example = {};\nExample.galton = function () {\n    let Engine = Matter.Engine,\n        Render = Matter.Render,\n        Runner = Matter.Runner,\n        Events = Matter.Events,\n        Body = Matter.Body,\n        Composite = Matter.Composite,\n        Composites = Matter.Composites,\n        Common = Matter.Common,\n        MouseConstraint = Matter.MouseConstraint,\n        Mouse = Matter.Mouse,\n        World = Matter.World,\n        Bodies = Matter.Bodies;\n    // create engine\n    let engine = Engine.create({\n        enableSleeping: false\n    }),\n        world = engine.world;\n    const width = 500;\n    const height = 500;\n    // create renderer\n    let render = Render.create({\n        element: document.body,\n        engine: engine,\n        options: {\n            width: width,\n            height: height,\n            wireframes: false\n        }\n    });\n    Render.run(render);\n    // create runner\n    let runner = Runner.create({\n        delta: 1000 / (60 * 10), // 600Hz delta = 1.666ms = 10upf @ 60fps (10x default precision)\n        maxFrameTime: 1000 / 20 // performance budget\n    });\n    Runner.run(runner, engine);\n    const discretize = (x) => Math.trunc(x / size) * size;\n\n    const size = 2;\n    const shootbins = 100;\n    let total = 1000;\n    const shootheightmax = 20;\n    const speed = 10;\n\n    const shootheightmin = shootheightmax + (size + 1) * shootbins;\n    const distribution = 'normal';\n    engine.gravity.y = 0;\n    World.add(\n        world,\n        Bodies.rectangle(width / 2, height - size/2, width, size, {\n            isStatic: true,\n            restitution: 0.0,\n            friction: 0,\n            density: 1000,\n            render: {\n                fillStyle: \"#ffffff\",\n                visible: true\n            },\n            id: \"floor\"\n        })\n    );\n    let xshift = 1;\n    let prevpeg;\n    for (let i = 0; i < shootbins; i++) {\n        const unifm1p1 = (i+1) / (shootbins+1);\n        const quantile = dists[distribution].quantile(unifm1p1, mu, sigma);\n        let x = discretize((quantile * 40 + width / 2));\n        if ((i > 0) && (prevpeg.position.x != x + xshift)) {\n            xshift++; \n        }\n        const peg = Bodies.rectangle(x + xshift, shootheightmin - i * (size + 1), size, size, {\n            isSensor: true,\n            isStatic: true,\n            render: {\n                fillStyle: \"#ffffff\",\n                visible: true\n            }\n        });\n        peg.id = \"peg\" + i;\n        prevpeg = peg;\n        World.add(world, peg);\n    }\n\n    Events.on(engine, 'collisionStart', function(event) {\n        let pairs = event.pairs;\n        for (let i = 0, j = pairs.length; i != j; ++i) {\n            let pair = pairs[i];\n            if (pair.bodyA.id == \"floor\" || (pair.bodyA.id.startsWith(\"square\") && pair.bodyA.isStatic)) {\n                Body.setPosition(pair.bodyB, { x: pair.bodyB.position.x, y: pair.bodyA.position.y - size });\n                Body.setStatic(pair.bodyB, true);\n            } else if (pair.bodyA.id.startsWith(\"peg\")) {\n                Body.setPosition(pair.bodyB, pair.bodyA.position);\n                Body.setVelocity(pair.bodyB, { x: 0, y: speed  });\n            }\n        }\n    });\n    \n    setInterval(() => {\n        if (total-- > 0) {\n            const unifm1p1 = Math.random();\n            const unidisc = Math.trunc(unifm1p1 * shootbins);\n            const square = Bodies.rectangle(\n                10, shootheightmin - unidisc * (size + 1)\n                , size, size, {\n                // isSensor: true,\n                sleepThreshold: 10,\n                friction: 1,\n                frictionAir: 0,\n                density: 1,\n                restitution: 0.0,\n                render: {\n                    fillStyle: \"#ff00ff\",\n                    visible: true\n                }\n            });\n            square.id = \"square\" + total;\n            Body.setVelocity(square, { x: speed, y: 0 });\n            Matter.Events.on(square, \"sleepStart\", () => {\n                Matter.Body.setStatic(square, true);\n            });\n            World.add(world, square);\n        }\n    });\n\n    return {\n        engine: engine,\n        runner: runner,\n        render: render,\n        canvas: render.canvas,\n        stop: function () {\n            Matter.Render.stop(render);\n            Matter.Runner.stop(runner);\n        }\n    };\n};\n","import MatterTools from \"matter-tools\";\nimport { Example } from \"./galton.js\";\n\nMatterTools.Demo.create({\n  fullPage: true,\n  preventZoom: true,\n  startExample: true,\n  appendTo: document.body,\n\n  toolbar: {\n    title: 'matter-tools',\n    url: 'https://github.com/liabru/matter-tools',\n    reset: true,\n    source: true,\n    inspector: true,\n    tools: true,\n    fullscreen: true,\n    exampleSelect: true\n  },\n\n  tools: {\n    inspector: true,\n    gui: true\n  },\n  \n  examples: [\n    {\n      name: 'Galton Board',\n      id: 'galton',\n      init: Example.galton,\n      sourceLink: './galton.js'\n    }]\n});\n\n"],"names":["dists","statdists","arrayRange","start","stop","step","value","index","sigma","mu","Example","Engine","Matter","Render","Runner","Events","Body","World","Bodies","engine","world","width","height","render","runner","discretize","x","size","shootbins","total","shootheightmax","speed","shootheightmin","distribution","xshift","prevpeg","i","unifm1p1","quantile","peg","event","pairs","j","pair","unidisc","square","MatterTools"],"mappings":"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"}