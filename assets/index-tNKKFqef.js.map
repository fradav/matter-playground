{"version":3,"file":"index-tNKKFqef.js","sources":["../../galton.js","../../main.js"],"sourcesContent":["import Matter from \"matter-js\";\n\nimport statdists from '@stdlib/dist-stats-base-dists-flat';\nconst dists = statdists.base.dists;\n\nconst arrayRange = (start, stop, step) =>\n    Array.from(\n        { length: (stop - start) / step + 1 },\n        (value, index) => start + index * step\n    );\nconst x = arrayRange(-5, 5, 0.01);\nconst sigma = 1;\nconst mu = 0;\n// const cdf = x.map(x => dists['normal'].cdf(x, mu, sigma));\n\nexport const Example = {};\nExample.galton = function () {\n    var Engine = Matter.Engine,\n        Render = Matter.Render,\n        Runner = Matter.Runner,\n        Events = Matter.Events,\n        Body = Matter.Body,\n        Composite = Matter.Composite,\n        Composites = Matter.Composites,\n        Common = Matter.Common,\n        MouseConstraint = Matter.MouseConstraint,\n        Mouse = Matter.Mouse,\n        World = Matter.World,\n        Bodies = Matter.Bodies;\n    // create engine\n    var engine = Engine.create({\n        enableSleeping: true\n    }),\n        world = engine.world;\n    const width = 500;\n    const height = 500;\n    // create renderer\n    var render = Render.create({\n        element: document.body,\n        engine: engine,\n        options: {\n            width: width,\n            height: height,\n            wireframes: false\n        }\n    });\n    Render.run(render);\n    // create runner\n    var runner = Runner.create({\n        delta: 1000 / (60 * 10), // 600Hz delta = 1.666ms = 10upf @ 60fps (10x default precision)\n        maxFrameTime: 1000 / 20 // performance budget\n    });\n    Runner.run(runner, engine);\n    const size = 2;\n    const discretize = (x) => Math.trunc(x / size) * size;\n    // add bodies\n    const shootbins = 100;\n    const shootheightmax = 20;\n    const shootheightmin = shootheightmax + size * shootbins;\n    const shootheight = shootheightmin - shootheightmax;\n    const middle = (shootheightmax + shootheightmin) / 2;\n    const distribution = 'normal';\n    let total = 1000;\n    engine.gravity.y = 0;\n    var pegs = []\n    World.add(\n        world,\n        Bodies.rectangle(width / 2, height - size/2, width, size, {\n            isStatic: true,\n            restitution: 0.0,\n            friction: 1,\n            density: 1000,\n            render: {\n                fillStyle: \"#ffffff\",\n                visible: true\n            },\n            id: \"floor\"\n        })\n    );\n    for (let i = 0; i < shootbins; i++) {\n        const unifm1p1 = i / shootbins;\n        const quantile = dists[distribution].quantile(unifm1p1, mu, sigma);\n        const squarecdf = Bodies.rectangle(discretize((quantile * 40 + width / 2)), shootheightmin - (i * size), size, size, {\n            isSensor: true,\n            isStatic: true,\n            // collisionFilter: {\n            //     mask: 0\n            // },\n            render: {\n                fillStyle: \"#ffffff\",\n                visible: true\n            }\n        });\n        squarecdf.id = \"peg\" + i;\n        pegs.push(squarecdf);\n        World.add(world, squarecdf);\n    }\n    // Events.on(engine, 'collisionStart', function (event) {\n    //     var pairs = event.pairs;\n\n    //     for (var i = 0, j = pairs.length; i != j; ++i) {\n    //         var pair = pairs[i];\n\n    //         if (pair.bodyA === collider) {\n    //             pair.bodyB.render.strokeStyle = colorA;\n    //         } else if (pair.bodyB === collider) {\n    //             pair.bodyA.render.strokeStyle = colorA;\n    //         }\n    //     }\n    // });\n    Events.on(engine, 'collisionStart', function(event) {\n        var pairs = event.pairs;\n        \n        for (var i = 0, j = pairs.length; i != j; ++i) {\n            var pair = pairs[i];\n            // console.log(\"A : \" + pair.bodyA.id, \"B : \" + pair.bodyB.id);\n            if (pair.bodyA.id == \"floor\" || (pair.bodyA.id.startsWith(\"square\") && pair.bodyA.isStatic)) {\n                // console.log(\"Setting static B :\" + pair.bodyB.id)\n                Body.setPosition(pair.bodyB, { x: pair.bodyB.position.x, y: pair.bodyA.position.y - size });\n                Body.setStatic(pair.bodyB, true);\n            } else if (pair.bodyA.id.startsWith(\"peg\")) {\n                Body.setPosition(pair.bodyB, pair.bodyA.position);\n                Body.setVelocity(pair.bodyB, { x: 0, y: 10  });\n            }\n        }\n    });\n    setInterval(() => {\n        if (total-- > 0) {\n            const unifm1p1 = Math.random();\n            const unidisc = Math.trunc(unifm1p1 * shootbins);\n            const quantile = dists[distribution].quantile(unifm1p1, mu, sigma);\n            const cdf = dists[distribution].cdf(unifm1p1, mu, sigma);\n            const square = Bodies.rectangle(\n                // discretize((quantile*40+width/2) ), discretize(shootheightmin-(unifm1p1*shootheight)+size)\n                10, shootheightmin - size - discretize(unifm1p1 * (shootheight - 2 * size))\n                , size, size, {\n                sleepThreshold: 10,\n                friction: 1,\n                density: 1,\n                restitution: 0.0,\n                slop: 0,\n                render: {\n                    fillStyle: \"#ff00ff\",\n                    visible: true\n                }\n            });\n            square.id = \"square\" + total;\n            Body.setVelocity(square, { x: 10, y: 0 });\n            Matter.Events.on(square, \"sleepStart\", () => {\n                Matter.Body.setStatic(square, true);\n            });\n            World.add(world, square);\n\n\n            // World.add(\n            //     world,\n            //     Bodies.rectangle(discretize((quantile*40+width/2) ), 1*height/3 + (-(unifm1p1-0.5)*height/3)\n            //     -10, size,size, {\n            //     isStatic: true,\n            //     render: {\n            //         fillStyle: \"#ffffff\",\n            //         visible: true\n            //     }\n            // }))\n        }\n    }, 1);\n\n    // World.add(world, pegs);\n    return {\n        engine: engine,\n        runner: runner,\n        render: render,\n        canvas: render.canvas,\n        stop: function () {\n            Matter.Render.stop(render);\n            Matter.Runner.stop(runner);\n        }\n    };\n};\n\n// const delta = 1000 / 60;\n// const subSteps = 50;\n// const subDelta = delta / subSteps;\n// const {engine, runner, render, canvas, stop} = Example.galton();\n// (function run() {\n//     window.requestAnimationFrame(run);\n//     for (let i = 0; i < subSteps; i += 1) {\n//     Matter.Engine.update(engine, subDelta);\n//     }\n// })();\n","import MatterTools from \"matter-tools\";\nimport { Example } from \"./galton.js\";\n\nMatterTools.Demo.create({\n  fullPage: true,\n  preventZoom: true,\n  startExample: true,\n  appendTo: document.body,\n\n  toolbar: {\n    title: 'matter-tools',\n    url: 'https://github.com/liabru/matter-tools',\n    reset: true,\n    source: true,\n    inspector: true,\n    tools: true,\n    fullscreen: true,\n    exampleSelect: true\n  },\n\n  tools: {\n    inspector: true,\n    gui: true\n  },\n  \n  examples: [\n    {\n      name: 'Galton Board',\n      id: 'galton',\n      init: Example.galton,\n      sourceLink: './galton.js'\n    }]\n});\n\n"],"names":["dists","statdists","arrayRange","start","stop","step","value","index","sigma","mu","Example","Engine","Matter","Render","Runner","Events","Body","World","Bodies","engine","world","width","height","render","runner","size","discretize","x","shootbins","shootheightmax","shootheightmin","shootheight","distribution","total","i","unifm1p1","quantile","squarecdf","event","pairs","j","pair","square","MatterTools"],"mappings":"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"}